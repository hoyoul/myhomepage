#+TITLE: Git Explained
#+AUTHOR: Hoyoul Park
#+DESCRIPTION: Org-HTML export made simple.
#+KEYWORDS:  org-mode, export, html, theme, style, css, js, bigblow
#+LANGUAGE:  en
#+OPTIONS:   H:4 toc:t num:2
#+MACRO: color @@html:<font color=></font>@@
#+PROPERTY:  header-args :padline no
#+SETUPFILE: https://fniessen.github.io/org-html-themes/setup/theme-readtheorg.setup
#+LATEX_HEADER: \usepackage{kotex}
#+latex_header: \hypersetup{colorlinks=true}

* Git 이란(Git의 본질)
#+begin_note
Git은 backup이 목적이 아니다. Git을 사용하는 사람 중에서 git은 작업 history를 유지하기 때문에 지금 진행중이던 작업이 문제가 생겨서 과거의 특정 시점으로  되돌리기 위해서 사용한다고 생각할 수 있다. 물론 과거 특정시점으로 되돌릴 수 있다.  그러나 그렇게 되면 현재의 모든 commit을 잃게 된다. git은 backup을 목적으로 설계된게 아니기 때문이다. 왜냐면 git의  history는 과거의 commit을 가리키는 단방향 linked list로 되어 있어 있어서 현재의 위치를 나타내는 branch가 단방향 link로 가서 특정시점의 commit으로 이동해서 그때의 source code로 되돌릴 수는 있다. 그런데 이후의 작업 commit(저장본이라고 한다면)들은 접근할 수 없다. 물론 git의 설계가 그렇다는 것이다. commit은 hash로 표현되기 때문에 과거의 특정 commit으로 이동했어도 현재의 commit의 hash를 안다면 다시 돌아갈 수 있다. 그러나 그런 방식은 git에서 제공하는 facility가 아니다.
#+end_note
* Git 사용(Local)
* Git 사용(Remote) 
